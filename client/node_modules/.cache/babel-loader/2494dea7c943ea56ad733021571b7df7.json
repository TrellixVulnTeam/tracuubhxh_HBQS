{"remainingRequest":"E:\\PROJECT\\multikart-responsive-vuejs-ecommerce\\multikart\\admin\\node_modules\\thread-loader\\dist\\cjs.js!E:\\PROJECT\\multikart-responsive-vuejs-ecommerce\\multikart\\admin\\node_modules\\babel-loader\\lib\\index.js!E:\\PROJECT\\multikart-responsive-vuejs-ecommerce\\multikart\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\PROJECT\\multikart-responsive-vuejs-ecommerce\\multikart\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\PROJECT\\multikart-responsive-vuejs-ecommerce\\multikart\\admin\\src\\components\\dashboard\\employee-status-table.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\PROJECT\\multikart-responsive-vuejs-ecommerce\\multikart\\admin\\src\\components\\dashboard\\employee-status-table.vue","mtime":1625234388000},{"path":"E:\\PROJECT\\multikart-responsive-vuejs-ecommerce\\multikart\\admin\\babel.config.js","mtime":1624424366000},{"path":"E:\\PROJECT\\multikart-responsive-vuejs-ecommerce\\multikart\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\PROJECT\\multikart-responsive-vuejs-ecommerce\\multikart\\admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\PROJECT\\multikart-responsive-vuejs-ecommerce\\multikart\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\PROJECT\\multikart-responsive-vuejs-ecommerce\\multikart\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\PROJECT\\multikart-responsive-vuejs-ecommerce\\multikart\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiBbImVtcGxveWVlIl0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0YWJsZWZpZWxkczogW3sKICAgICAgICBrZXk6ICJpbWFnZSIsCiAgICAgICAgbGFiZWw6ICJOYW1lIiwKICAgICAgICBzb3J0YWJsZTogZmFsc2UKICAgICAgfSwgewogICAgICAgIGtleTogInBvc2l0aW9uIiwKICAgICAgICBsYWJlbDogIkRlc2lnbmF0aW9uIiwKICAgICAgICBzb3J0YWJsZTogZmFsc2UKICAgICAgfSwgewogICAgICAgIGtleTogInNraWxsTGV2ZWwiLAogICAgICAgIGxhYmVsOiAiU2tpbGwgTGV2ZWwiLAogICAgICAgIHNvcnRhYmxlOiBmYWxzZQogICAgICB9LCB7CiAgICAgICAga2V5OiAiZXhwZXJpZW5jZSIsCiAgICAgICAgbGFiZWw6ICJFeHBlcmllbmNlIiwKICAgICAgICBzb3J0YWJsZTogZmFsc2UKICAgICAgfV0sCiAgICAgIGZpbHRlcjogbnVsbCwKICAgICAgdG90YWxSb3dzOiB0aGlzLmVtcGxveWVlLmxlbmd0aCwKICAgICAgY3VycmVudFBhZ2U6IDEsCiAgICAgIHBlclBhZ2U6IDUsCiAgICAgIHBhZ2VPcHRpb25zOiBbNV0KICAgIH07CiAgfSwKCiAgY3JlYXRlZCgpIHt9LAoKICBjb21wdXRlZDogewogICAgc29ydE9wdGlvbnMoKSB7CiAgICAgIC8vIENyZWF0ZSBhbiBvcHRpb25zIGxpc3QgZnJvbSBvdXIgZmllbGRzCiAgICAgIHJldHVybiB0aGlzLnRhYmxlZmllbGRzLmZpbHRlcihmID0+IGYuc29ydGFibGUpLm1hcChmID0+IHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgdGV4dDogZi5sYWJlbCwKICAgICAgICAgIHZhbHVlOiBmLmtleQogICAgICAgIH07CiAgICAgIH0pOwogICAgfQoKICB9LAoKICBtb3VudGVkKCkgey8vIFNldCB0aGUgaW5pdGlhbCBudW1iZXIgb2YKICAgIC8vICB0aGlzLnRvdGFsUm93cyA9IHRoaXMuaXRlbXMubGVuZ3RoCiAgfSwKCiAgbWV0aG9kczogewogICAgZ2V0SW1nVXJsKHBhdGgpIHsKICAgICAgcmV0dXJuIHJlcXVpcmUoIkAvYXNzZXRzL2ltYWdlcy91c2Vycy8iICsgcGF0aCk7CiAgICB9LAoKICAgIG9uRmlsdGVyZWQoZmlsdGVyZWRJdGVtcykgewogICAgICAvLyBUcmlnZ2VyIHBhZ2luYXRpb24gdG8gdXBkYXRlIHRoZSBudW1iZXIgb2YgYnV0dG9ucy9wYWdlcyBkdWUgdG8gZmlsdGVyaW5nCiAgICAgIHRoaXMudG90YWxSb3dzID0gZmlsdGVyZWRJdGVtcy5sZW5ndGg7CiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSAxOwogICAgfQoKICB9Cn07"},{"version":3,"mappings":"AA6CA;EACAA,mBADA;;EAEAC;IACA;MACAC,cACA;QAAAC;QAAAC;QAAAC;MAAA,CADA,EAEA;QAAAF;QAAAC;QAAAC;MAAA,CAFA,EAGA;QAAAF;QAAAC;QAAAC;MAAA,CAHA,EAIA;QAAAF;QAAAC;QAAAC;MAAA,CAJA,CADA;MAOAC,YAPA;MAQAC,+BARA;MASAC,cATA;MAUAC,UAVA;MAWAC;IAXA;EAaA,CAhBA;;EAiBAC,YAjBA;;EAkBAC;IACAC;MACA;MACA,wBACAP,MADA,CACAQ,eADA,EAEAC,GAFA,CAEAD;QACA;UAAAE;UAAAC;QAAA;MACA,CAJA;IAKA;;EARA,CAlBA;;EA4BAC,WACA;IACA;EACA,CA/BA;;EAgCAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;MACA;MACA;IACA;;EARA;AAhCA","names":["props","data","tablefields","key","label","sortable","filter","totalRows","currentPage","perPage","pageOptions","created","computed","sortOptions","f","map","text","value","mounted","methods","getImgUrl","onFiltered"],"sourceRoot":"src/components/dashboard","sources":["employee-status-table.vue"],"sourcesContent":["<template>\n  <div class=\"col-xl-6 xl-100\">\n    <px-card title=\"Employee status\">\n      <div class=\"card-body\">\n        <div class=\"user-status table-responsive products-table\">\n          <b-table\n            show-empty\n            :items=\"employee\"\n            :fields=\"tablefields\"\n            :filter=\"filter\"\n            :current-page=\"currentPage\"\n            :per-page=\"perPage\"\n            @filtered=\"onFiltered\"\n          >\n            <template #cell(image)=\"field\">\n              <div class=\"align-middle image-sm-size\">\n                <img\n                  class=\"img-radius align-top m-r-15 rounded-circle blur-up lazyloaded\"\n                  :src=\"getImgUrl(field.item.image)\"\n                />\n                <div class=\"d-inline-block\">\n                  <h6>\n                    {{ field.item.name }}\n                    <span class=\"text-muted digits\">{{ field.item.user }}</span>\n                  </h6>\n                </div>\n              </div>\n            </template>\n            <template #cell(skillLevel)=\"field\">\n              <div>\n                <b-progress\n                  :value=\"field.item.skillLevel\"\n                  :variant=\"field.item.type\"\n                  class=\"sm-progress-bar\"\n                ></b-progress>\n              </div>\n            </template>\n          </b-table>\n        </div>\n      </div>\n    </px-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: [\"employee\"],\n  data() {\n    return {\n      tablefields: [\n        { key: \"image\", label: \"Name\", sortable: false },\n        { key: \"position\", label: \"Designation\", sortable: false },\n        { key: \"skillLevel\", label: \"Skill Level\", sortable: false },\n        { key: \"experience\", label: \"Experience\", sortable: false },\n      ],\n      filter: null,\n      totalRows: this.employee.length,\n      currentPage: 1,\n      perPage: 5,\n      pageOptions: [5],\n    };\n  },\n  created() {},\n  computed: {\n    sortOptions() {\n      // Create an options list from our fields\n      return this.tablefields\n        .filter((f) => f.sortable)\n        .map((f) => {\n          return { text: f.label, value: f.key };\n        });\n    },\n  },\n  mounted() {\n    // Set the initial number of\n    //  this.totalRows = this.items.length\n  },\n  methods: {\n    getImgUrl(path) {\n      return require(\"@/assets/images/users/\" + path);\n    },\n    onFiltered(filteredItems) {\n      // Trigger pagination to update the number of buttons/pages due to filtering\n      this.totalRows = filteredItems.length;\n      this.currentPage = 1;\n    },\n  },\n};\n</script>\n\n<style>\n</style>"]}]}