{"remainingRequest":"E:\\CODE_APP\\TRACUUNO\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\CODE_APP\\TRACUUNO\\client\\src\\components\\UI\\sidebar.vue?vue&type=template&id=633bd8a2&scoped=true&","dependencies":[{"path":"E:\\CODE_APP\\TRACUUNO\\client\\src\\components\\UI\\sidebar.vue","mtime":1658381884692},{"path":"E:\\CODE_APP\\TRACUUNO\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\CODE_APP\\TRACUUNO\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\CODE_APP\\TRACUUNO\\client\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\CODE_APP\\TRACUUNO\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\CODE_APP\\TRACUUNO\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1655712169000},{"path":"E:\\CODE_APP\\TRACUUNO\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\CODE_APP\\TRACUUNO\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}