{"remainingRequest":"E:\\PROJECT\\TRACUUNO\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\PROJECT\\TRACUUNO\\client\\src\\pages\\coupon\\AddCoupon.vue?vue&type=template&id=dc1b023c&","dependencies":[{"path":"E:\\PROJECT\\TRACUUNO\\client\\src\\pages\\coupon\\AddCoupon.vue","mtime":1625220463000},{"path":"E:\\PROJECT\\TRACUUNO\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\PROJECT\\TRACUUNO\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\PROJECT\\TRACUUNO\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\PROJECT\\TRACUUNO\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1655712169000},{"path":"E:\\PROJECT\\TRACUUNO\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\PROJECT\\TRACUUNO\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}